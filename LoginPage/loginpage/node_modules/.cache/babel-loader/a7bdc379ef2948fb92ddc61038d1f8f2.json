{"ast":null,"code":"var _jsxFileName = \"/var/www/LoginPage/loginpage/src/Components/ResetPassword.js\";\nimport { FormControl, Grid, Input, Paper, FormGroup, Avatar, TextField, Button, Typography, makeStyles } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox'; // import { useState } from \"react\";\n// import { Link, useHistory, Router } from \"react-router-dom\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"; // import Form from \"rc-field-form/es/Form\";\n\nimport * as Yup from 'yup';\nimport React from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  logg: {\n    color: 'blue',\n    textDecoration: 'none',\n    fontSize: 20,\n    marginLeft: 10\n  }\n});\n\nconst ResetPassword = () => {\n  // const [email, setEmail] = useState(initialValues);\n  // const [password, setPassword] =useState(initialValues);\n  const classes = useStyles; // const history = useHistory();\n\n  const initialValues = {\n    NewPassword: '',\n    ConfirmPassword: ''\n  };\n  const paperStyle = {\n    padding: 20,\n    height: '60vh',\n    width: 300,\n    margin: \"20px auto\"\n  };\n  const btnStyle = {\n    margin: '10px 5px'\n  };\n  const containerStyle = {\n    marginTop: '20px'\n  };\n  const validationSchema = Yup.object().shape({\n    NewPassword: Yup.string().min(8, \"Password minimum length should be 8\").required(\"Required\"),\n    ConfirmPassword: Yup.string().oneOf([Yup.ref('NewPassword')], \"Password not matched\").required(\"required\")\n  });\n\n  const onSubmit = (values, props) => {\n    console.log(values);\n    history.push('/login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Reset Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validationSchema: validationSchema,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            style: containerStyle,\n            label: \"New Password\",\n            placeholder: \"Enter Password\",\n            type: \"password\",\n            fullWidth: true,\n            required: true,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"NewPassword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this),\n            name: \"NewPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            style: containerStyle,\n            label: \"Confirm Password\",\n            placeholder: \"Confirm Password\",\n            type: \"password\",\n            fullWidth: true,\n            required: true,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"ConfirmPassword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this),\n            name: \"ConfirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: btnStyle,\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            fullWidth: true,\n            children: \" Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/var/www/LoginPage/loginpage/src/Components/ResetPassword.js"],"names":["FormControl","Grid","Input","Paper","FormGroup","Avatar","TextField","Button","Typography","makeStyles","LockOutlinedIcon","FormControlLabel","Checkbox","Formik","Form","Field","ErrorMessage","Yup","React","axios","useStyles","logg","color","textDecoration","fontSize","marginLeft","ResetPassword","classes","initialValues","NewPassword","ConfirmPassword","paperStyle","padding","height","width","margin","btnStyle","containerStyle","marginTop","validationSchema","object","shape","string","min","required","oneOf","ref","onSubmit","values","props","console","log","history","push"],"mappings":"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","sourcesContent":["import { FormControl, Grid, Input ,Paper, FormGroup, Avatar, TextField, Button, Typography, makeStyles } from \"@material-ui/core\"\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import { useState } from \"react\";\n// import { Link, useHistory, Router } from \"react-router-dom\";\nimport { Formik, Form ,Field,ErrorMessage} from \"formik\";\n// import Form from \"rc-field-form/es/Form\";\nimport * as Yup from 'yup';\nimport React from \"react\";\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles  ({\n    logg : {\n     color: 'blue', \n     textDecoration : 'none',\n     fontSize: 20,\n     marginLeft:10\n    }\n  })\n\n\n\n\nconst ResetPassword = () => {\n    // const [email, setEmail] = useState(initialValues);\n    // const [password, setPassword] =useState(initialValues);\n    const classes= useStyles;\n    // const history = useHistory();\n\n\n    const initialValues = {             \n        NewPassword:'',\n        ConfirmPassword:''\n       \n      }\n      \n\n    \n    const paperStyle={padding :20, height:'60vh',width:300, margin:\"20px auto\"}\n    const btnStyle={margin: '10px 5px'}\n    const containerStyle={ marginTop: '20px'}\n\n\n    const validationSchema=Yup.object().shape({\n        NewPassword:Yup.string().min(8,\"Password minimum length should be 8\").required(\"Required\"),\n        ConfirmPassword:Yup.string().oneOf([Yup.ref('NewPassword')], \"Password not matched\").required(\"required\")\n    })\n\n    const onSubmit=(values, props) =>{ \n        console.log(values)\n        history.push('/login');\n    }\n\n    return(\n\n    <Grid>\n       <Paper elevation={10} style={paperStyle}>\n         <Grid align='center'>\n       {/* <Avatar style={avatarStyle}><LockOutlinedIcon /> </Avatar> */}\n      <h2> Reset Password </h2>\n      </Grid>\n      <Formik initialValues ={initialValues} onSubmit={onSubmit} validationSchema ={validationSchema}>\n        {(props) => (\n          <Form>\n            {/* {console.log(props)} */}\n            <Field as={TextField} style={containerStyle} label='New Password' placeholder='Enter Password' type='password' fullWidth required\n            helperText={<ErrorMessage name=\"NewPassword\"/>} \n        name='NewPassword'  />\n\n         <Field as={TextField} style={containerStyle} label='Confirm Password' placeholder='Confirm Password' type='password' fullWidth required\n            helperText={<ErrorMessage name=\"ConfirmPassword\"/>} \n        name='ConfirmPassword'  />\n     \n         \n      \n\n      <Button style={btnStyle} type='submit' color='primary' variant='contained' fullWidth> Reset Password</Button>\n      </Form>\n        )}\n      </Formik>\n      </Paper>\n     </Grid> \n  );\n}\n\nexport default ResetPassword\n\n"]},"metadata":{},"sourceType":"module"}